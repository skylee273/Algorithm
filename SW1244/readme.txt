시간 : 10개 테스트케이스를 합쳐서 C/C++의 경우 10초 / Java의 경우 20초
메모리 : 힙, 정적 메모리 합쳐서 256MB 이내, 스택 메모리 1MB 이내

※ SW Expert 아카데미의 문제를 무단 복제하는 것을 금지합니다.

퀴즈 대회에 참가해서 우승을 하게 되면 보너스 상금을 획득할 수 있는 기회를 부여받는다.

우승자는 주어진 숫자판들 중에 두 개를 선택에서 정해진 횟수만큼 서로의 자리를 위치를 교환할 수 있다.

예를 들어, 다음 그림과 3, 2, 8, 8, 8 의 5개의 숫자판들이 주어지고 교환 횟수는 2회라고 하자.

교환전>
처음에는 첫번째 숫자판의 3과 네 번째 숫자판의 8을 교환해서 8, 2, 8, 3, 8이 되었다.
 
다음으로, 두 번째 숫자판 2와 마지막에 있는 8을 교환해서 8, 8, 8, 3, 2이 되었다.

정해진 횟수만큼 교환이 끝나면 숫자판의 위치에 부여된 가중치에 의해 상금이 계산된다.

숫자판의 오른쪽 끝에서부터 1원이고 왼쪽으로 한자리씩 갈수록 10의 배수만큼 커진다.

위의 예에서와 같이 최종적으로 숫자판들이 8,8,8,3,2의 순서가 되면 88832원의 보너스 상금을 획득한다.

여기서 주의할 것은 반드시 횟수만큼 교환이 이루어져야 하고 동일한 위치의 교환이 중복되어도 된다.

다음과 같은 경우 1회의 교환 횟수가 주어졌을 때 반드시 1회 교환을 수행하므로 결과값은 49가 된다.

94의 경우 2회 교환하게 되면 원래의 94가 된다.

정해진 횟수만큼 숫자판을 교환했을 때 받을 수 있는 가장 큰 금액을 계산해보자.

[입력]

가장 첫 줄은 전체 테스트 케이스의 수이다.

최대 10개의 테스트 케이스가 표준 입력을 통하여 주어진다.

각 테스트 케이스에는 숫자판의 정보와 교환 횟수가 주어진다.

숫자판의 정보는 정수형 숫자로 주어지고 최대 자릿수는 6자리이다.

[출력]

각 테스트 케이스마다, 첫 줄에는 “#C”를 출력해야 하는데 C는 케이스 번호이다.

같은 줄에 빈 칸을 하나 사이에 두고 교환 후 받을 수 있는 가장 큰 금액을 출력한다.

[ 시간측정 ]
- 문제이해 : 1분45초
- 문제풀이 : 6분 46초
- 코딩시간 : 17분
- 디버깅시간 : 35분
- 총 걸린 시간 : 60분

문제점 : 아직 재귀에 대한 그림이 정확히 그려지지 않는다 머리속에서 재귀 그림을 (트리로 그리는 연습을 많이 하자).
참고사항 vector로 assign 하게 되면 동적 할당이기때문에 디버깅 오래 걸림 최대한 배열로 하는 방법을 추천함!!
2차원 배열 for 문 안에 memset(arr[i], 0, sizeof(자료형) * row)

[풀이]
1. 첫번째 풀이 -> 탐욕적 방법으로 최적을 찾을 수 있는지 확인함 -> X 안됨
2. 두번째 풀이 -> 숫자가 즉 인풋 값이 작은 것을 보고 완전탐색이 가능하다고 생각함 ( 재귀 이용한 )
3. 조합과 비슷한 방법으로 생각함 visit 을 하는 과정에서 먼가 실수를 했음 그래서 디버깅 시간이 오래 걸림 
4. 디버깅 실력을 좀더 늘려야 함 ! 