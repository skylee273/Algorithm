[Quick Sort]
- 퀵 정렬은 불안정 정렬에 속하며, 다른 원소와의 비교만으로 정렬을 수행하는 비교 정렬에 속한다.
- 분할정복 알고리즘의 하나로, 평균적으로 매우 빠른 수행 속도를 자랑하는 정렬방법 (합병 정렬과 다르게 리스트를 비균등 분할)

[과정 설명]
(1) pivot 을 설정한다 (처음으로 설정하거나 중간 값으로 설정)
(2) left 가 pivot 보다 큰 값이 나올 때 까지 left++
(3) right 가 pivot 보다 작은 값이 나올 때 까지 right--
(4) left <= right 이면 서로 값을 swap 후 left++ , right--
(5) left > right 일때까지 반복
(6) pivot을 기준으로 교환 연산이 끝났으면 pivot 기준 왼쪽 오른쪽 다시 quicksort (1) 반복


[Selection Sort]
- 저장되어 있는 자료로부터 K번째 큰 혹은 작은 원소를 찾는 방법
- 최소값, 최대값, 혹은 중간값을 찾는 알고리즘을 의미하기도 함
- 주어진 자료들 중 가장 작은 값의 우너소부터 차례대로 선택하여 위치를 교환

[과정 설명]
(1) 처음 원소를 Min 으로 설정
(2) min으로 설정된 원소를 제외한 나머지 원소와 비교하면서 가장 작은 Min을 찾음
(3) 가장 작은 Min 값을 찾았으면 그때 배열 인덱스와 처음 인덱스를 교환
(4) (1) 반복

[Bubble Sort]
- 인접한 두개의 원소를 비교하며 자리를 계속 교환하는 방식

[Counting Sort]
- 항목들의 순서를 결정하기 위해 집합에 각 항목이 몇 개씩 있는지 세는 작업을 하며, 선형시간에 정렬하는 효율적인 알고리즘

[과정설명]
(1) 배열에서 가장 큰 값을 찾음
(2) 가장 큰값을 이용하여 Count 배열 생성 (큰값 만큼)
(3) Count 배열의 각 원소들의 발생 횟수를 저장
(4) 원소의 자릿수를 맞춤 (해당 원소가 정렬될 때 배열의 몇 번째 위치에 들어가야 하는지를 보여주는 작업)
(5) 해당 원소들을 처음부터 하나씩 꺼내면서 count 원소를 보고 들어갈 위치에 저장
