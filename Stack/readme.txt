[Stack 자료구조 개념] 

[Stack 특성]
1. 물건을 쌓아 올리듯 자료를 쌓아 올린 형태의 자료구조
2. Stack에 저장된 자료는 선형 구조를 가짐
3. Stack에 자료를 삽입하거나 Stack에서 자료를 꺼낼 수 있음.
4. Stack에 마지막에 삽입한 자료가 먼저 꺼내짐
5. 후입선출 (LIFO)

[Stack의 응용] / [Function Call]
프로그램에서의 함수호출과 복귀에 따른 수행 순서를 관리
가장 마지막에 호출된 함수가 가장 먼저 실행을 완료하고 복귀하는 후입선출 구조이므로, 후입선출 구조의 Stack을 이용하여 수행관리

함수 호출이 발생하면 호출한 함수 수행에 필요한 지역변수, 매개변수 및 수행 후 복귀할 주소등의 정보를 Stack 프레임에 저장하여 시스템 
Stack에 삽입

함수의 실행이 끝나면 시스템 Stack의 Top원소를 삭제하면서 프레임에 저장되어 있던 복귀주소를 확인하고 복귀

함수 호출과 복귀에 따라 이 과정을 반복하여 전체 프로그램 수행이 종료되면 시스템 Stack은 공배 Stack이 됨

[프로그램 메모리 공간]
1. 코드영역
- 실행할 프로그램의 코드가 저장되는 메모리 공간
2. 데이터 영역
- 전역 변수와 Static 변수가 할당되는 영역
- 프로그램 시작과 동시에 할당되어 종료시까지 남아있는 특징의 변수가 저장되는 영역
3. 힙 영역
- 프로그래머가 원하는 시점에 메모리 공간에 할당 및 소멸으 하기위한 영역
4. Stack 영역
- 지역변수와 매개변수가 할당되는 영역 

